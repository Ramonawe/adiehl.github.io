{"version":3,"sources":["webpack:///./src/app/letter.service.ts","webpack:///./src/$_gendir async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/models/Company.ts","webpack:///./src/models/Templates.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Company } from '../models/Company';\nimport { Letter } from '../models/Letter';\n\nconst jsPDF = require('jspdf');\n\n@Injectable()\nexport class LetterService {\n\n  public createPdf(company: Company, letter: Letter, sender) {\n    const doc = new jsPDF({\n      orientation: 'portrait',\n      unit: 'mm'\n    });\n    let txt = '';\n    if (company.contractNumber) {\n      txt += 'Betreff: ' + company.contractNumber + '\\n\\n';\n    }\n    doc.setFontSize(14);\n\n    doc.text(letter.titleText, 20, 100);\n\n    doc.setFontSize(12);\n    doc.text(this.getDate(), 170, 110);\n    txt += letter.introText;\n    for (const textBlock of letter.textblocks) {\n      if (textBlock.selected === true) {\n        txt += ' - ' + textBlock.content + '\\n';\n      }\n    }\n\n    // remove trailing , and replace by .\n    const lastChar = txt.substr(txt.length - 2);\n    if (lastChar === ',\\n') {\n      txt = txt.substr(0, txt.length - 2) + '.\\n';\n    }\n    if (company.remarks) {\n      txt += '\\n\\n' + company.remarks + '\\n';\n    }\n\n    // sender\n    doc.text(doc.splitTextToSize(sender, 40), 140, 20);\n    // split sender\n    const senderLines = sender.split('\\n');\n    const senderName = senderLines[0];\n    txt += letter.endClause + '\\n\\n\\n';\n    txt += senderName;\n    doc.setLineWidth(180);\n    doc.setFontSize(12);\n\n\n    // recipient\n    const recipient = company.companyName + '\\n' +\n      (company.companyAddress ? company.companyAddress : '') + '\\n' +\n      (company.companyZip ? company.companyZip + ' ' : '') +\n      (company.companyCity ? company.companyCity : '') + '\\n' +\n      (company.companyCountry ? company.companyCountry : '');\n    doc.text(recipient, 20, 60);\n    doc.text(doc.splitTextToSize(txt, 170), 20, 120);\n    const filenName = company.companyName.replace(/[^A-Za-z0-9]/, '_');\n    // doc.text(doc.splitTextToSize(txt, 180), 20, 100);\n    doc.save(filenName + '.pdf');\n  }\n\n  /**\n   * Return current Date in german format\n   * @returns {string}\n   */\n  public getDate(): string {\n    const today = new Date();\n    let dd: string = today.getDate().toString();\n    let mm: string = (today.getMonth() + 1).toString();\n    const yyyy = today.getFullYear();\n\n    if (parseInt(dd, 10) < 10) {\n      dd = '0' + dd;\n    }\n\n    if (parseInt(mm, 10) < 10) {\n      mm = '0' + mm;\n    }\n    return dd + '.' + mm + '.' + yyyy;\n  }\n\n  constructor() { }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/letter.service.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 347;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_gendir async\n// module id = 347\n// module chunks = 1","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component } from '@angular/core';\nimport { Company } from '../models/Company';\nimport { LetterService } from './letter.service';\nimport { Letter } from '../models/Letter';\nimport {Templates} from '../models/Templates';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  /**\n   * Sender of the letter\n   * @type {string}\n   */\n  sender = '';\n  templateName = '';\n  templateNames: string[] = [];\n\n  letter: Letter;\n\n  /**\n   * List of currently selected companies\n   * @type {{companyName: string}[]}\n   */\n  companyList: Company[] = [];\n  /**\n   * currently edited company\n   * @type {{companyName: string}}\n   */\n  currentCompany: Company = new Company;\n\n  public changeTemplate() {\n    this.letter = this.getTemplate(this.templateName);\n  }\n\n  public getTemplate(templateName: string) {\n    const templates = new Templates();\n    for (const template of templates.Templates) {\n      if (template.name === templateName) {\n        return template;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Gets current date in german format\n   * @returns {string}\n   */\n  public getDate(): string {\n    return this.letterService.getDate();\n  }\n\n  /**\n   * saves company to localstorage\n   */\n  public saveCompany() {\n    let existingCompany = null;\n    for (const oneCompany of this.companyList) {\n      if (oneCompany.companyName === this.currentCompany.companyName) {\n        existingCompany = oneCompany;\n      }\n    }\n    if (existingCompany !== null) {\n      existingCompany.letter.push(JSON.parse(JSON.stringify(this.letter)));\n    } else {\n      // clone entry the stupid js way\n      const newCompany: Company = JSON.parse(JSON.stringify(this.currentCompany));\n      newCompany.letter.push(this.letter);\n      this.companyList.push(JSON.parse(JSON.stringify(newCompany)));\n    }\n    this.saveCompanyList();\n    this.currentCompany = new Company();\n    for (const textBlock of this.letter.textblocks) {\n      textBlock.selected = true;\n    }\n  }\n\n  /**\n   * saves sender to localstorage\n   */\n  public saveSender() {\n    window.localStorage.setItem('sender', this.sender);\n  }\n\n  /**\n   * generates pdf\n   * @param {Company} company\n   */\n  public printPdf(company: Company, letter: Letter) {\n    this.letterService.createPdf(company, letter, this.sender);\n    letter.printed = this.getDate();\n    this.saveCompanyList();\n  }\n\n  /**\n   * saves company list in localstorage\n   */\n  public saveCompanyList() {\n    window.localStorage.setItem('companyList', JSON.stringify(this.companyList));\n  }\n\n  /**\n   * creates a new letter for the selected company\n   * @param company\n   */\n  public createLetter(company) {\n    this.currentCompany = company;\n    this.letter = new Templates().Templates[0];\n    this.templateName = this.letter.name;\n\n  }\n  /**\n   * removes company from company list and edits it\n   * @param company\n   */\n  public editCompany(company, letter) {\n    const companyLetters = [];\n    // filter out current letter\n    for (const singleLetter of company.letter) {\n      if (singleLetter !== letter) {\n        companyLetters.push(singleLetter);\n      }\n    }\n    company.letter = companyLetters;\n    this.currentCompany = company;\n    this.letter = letter;\n    // if no letter remains\n\n    if (company.letter.length === 0) {\n      const companies = [];\n      for (const oneCompany of this.companyList) {\n        if (oneCompany.companyName !== company.companyName) {\n          companies.push(oneCompany);\n        }\n      }\n      this.companyList = companies;\n      this.saveCompanyList();\n    }\n  }\n\n  /**\n   * constructor, called when instantiated\n   * load company list and sender information\n   */\n  constructor(public letterService: LetterService) {\n    const storeCompanylist = window.localStorage.getItem('companyList');\n    if (storeCompanylist !== null) {\n      this.companyList = JSON.parse(storeCompanylist);\n    }\n    const storeSender = window.localStorage.getItem('sender');\n    if (storeSender !== null) {\n      this.sender = storeSender;\n    }\n    const templates = new Templates();\n    for (const template of templates.Templates) {\n      this.templateNames.push(template.name);\n    }\n    this.letter = templates.Templates[0];\n    this.templateName = this.letter.name;\n    console.log(this.letter);\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { LetterService } from './letter.service';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n  ],\n  providers: [LetterService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import {Letter} from './Letter';\n\nexport class Company {\n  companyName: string;\n  companyAddress?: string;\n  companyZip?: string;\n  companyCity?: string;\n  companyCountry?: string;\n  contractNumber?: string;\n  remarks?: string;\n  letter: Letter[] = [];\n  printed?: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/Company.ts","import {Letter} from './Letter';\n\nexport class Templates {\n  Templates: Letter[] = [\n    {\n      name: 'DSGVO-Auskunft',\n      titleText : 'Datenschutzrechliche Selbstauskunft gemäß DSGVO',\n      introText : 'Sehr geehrte Damen und Herren,\\n\\n' +\n      'nach Art. 15 DSGVO habe ich das Recht, von Ihnen eine Bestätigung darüber zu verlangen' +\n      ', ob sie personenbezogene Daten über mich gespeichert haben. Sofern dies der Fall ist, so habe ich ein' +\n      ' Recht auf Auskunft über diese Daten.\\n' +\n      '\\n' +\n      'Ich darf Sie in diesem Fall bitten, mir\\n',\n      endClause : '\\n' +\n      '\\n' +\n      '\\n' +\n      'Mit freundlichen Grüßen,',\n      textblocks : [\n        { name : 'text1', content: 'vollumfänglich sämtliche über mich bei Ihnen gespeicherten Daten in Kopie zu überlassen,',\n          selected: true },\n        { name : 'text2', content: 'den Zweck der Verarbeitung dieser Daten zu nennen,',\n          selected : true },\n        { name : 'text3', content: 'die Empfänger oder Kategorien von Empfängern, die meine Daten bereits erhalten haben oder' +\n          ' zukünftig noch erhalten werden zu nennen,',\n          selected : true },\n        { name : 'text4', content: 'die geplante Dauer der Speicherung dieser Daten zu nennen,',\n          selected : true },\n        { name : 'text5', content: 'sofern die Daten nicht bei mir erhoben werden, mir alle verfügbaren Daten über die Herkunft der' +\n          ' Daten mitzuteilen,',\n          selected : true },\n        { name : 'text6', content: 'mir darzulegen, ob eine automatisierte Entscheidungsfindung einschließlich Profiling gmäß ' +\n          'Art. 22 DSGVO ' +\n          'besteht und mir in diesem Fall aussagekräftige Informationen über die involvierte Logik und die angestrebten' +\n          ' Auswirkungen einer derartigen Verarbeitung für meine Person zukommen zu lassen,',\n          selected : true }\n      ]\n    },\n    {\n      name: 'DSGVO-Beanstandung',\n      titleText : 'Beanstandung Ihrer Antwort auf das DSGVO-Auskunftsersuchen',\n      introText : 'Sehr geehrte Damen und Herren,\\n\\n' +\n      'Ihre Antwort auf meine Anfrage war fehlerhaft. Bitte korrigieren Sie Ihre Angaben umgehend,' +\n      'Ansonsten sehe ich mich gezwungen Sie der zuständigen Aufsichtsbehörde zu melden sowie die' +\n      'Ansprüche gerichtlich durchzusetzen.\\n' +\n      '\\n' +\n      'Fehlerhaft oder unvollständig waren insbesondere folgende Angaben:\\n',\n      endClause : '\\n' +\n      '\\n' +\n      '\\n' +\n      'Mit freundlichen Grüßen,',\n      textblocks : [\n        { name : 'return1', content: 'Es fehlten Konto- bzw. Abrechnungsdaten.',\n          selected: true },\n        { name : 'return2', content: 'Es fehlten Daten über mein Kaufverhalten.',\n          selected : true },\n        { name : 'return3', content: 'Es fehlten Nutzungsprotokolle.',\n          selected : true },\n        { name : 'return4', content: 'Es fehlten Zutrittsprotokolle.',\n          selected : true },\n        { name : 'return5', content: 'Es fehlten Standortdaten und -verläufe.',\n          selected : true },\n        { name : 'return6', content: 'Es fehlten Datenbankeinträge.',\n          selected : true },\n        { name : 'return7', content: 'Es fehlten technische Daten.',\n          selected : true },\n        { name : 'return8', content: 'Es fehlten interne Notizen und Aufzeichnungen.',\n          selected : true },\n      ]\n    }\n  ];\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/Templates.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 616\n// module chunks = 1","module.exports = \"<nav class=\\\"navbar navbar-dark bg-dark flex-md-nowrap shadow\\\">\\n  <span class=\\\"navbar-brand col-sm-3 col-md-2 mr-0\\\">DSGVO-Generator</span>\\n  <ul class=\\\"navbar-nav px-3\\\">\\n    <li class=\\\"nav-item text-nowrap\\\">\\n      <a class=\\\"nav-link\\\" href=\\\"https://github.com/adiehl/hdgdldsgvo/blob/master/INFO.md\\\" target=\\\"_blank\\\">\\n        Datenschutzerklärung, Rechtliche Hinweise und Infos</a>\\n    </li>\\n  </ul>\\n</nav>\\n<div class=\\\"container mt-3\\\">\\n\\n  <div class=\\\"row\\\">\\n    <!-- Firmenliste -->\\n\\n    <div class=\\\"col-md-4 order-md-2 mb-4 sidebar bg-light d-md-block d-none\\\">\\n      <h4 class=\\\"d-flex justify-content-between align-items-center mb-3\\\">\\n        Vorlage\\n      </h4>\\n      <select class=\\\"form-control mb-3\\\" [(ngModel)]=\\\"templateName\\\" (change)=\\\"changeTemplate()\\\">\\n        <option *ngFor=\\\"let templateName of templateNames\\\" value=\\\"{{templateName}}\\\">{{templateName}}</option>\\n      </select>\\n      <ng-container *ngIf=\\\"companyList.length\\\">\\n        <h4 class=\\\"d-flex justify-content-between align-items-center mb-3\\\">\\n          Firmenliste\\n          <span class=\\\"badge badge-success badge-pill\\\">{{companyList.length}}</span>\\n        </h4>\\n\\n        <ul class=\\\"list-group list-group-flush\\\" *ngFor=\\\"let company of companyList\\\">\\n          <li class=\\\"list-group-item\\\">\\n            <div>\\n              <h5>{{company.companyName}} <span class=\\\"badge badge-success float-right ml-1\\\" (click)=\\\"createLetter(company)\\\">Neu</span></h5>\\n\\n\\n            </div>\\n            <div class=\\\"clear\\\" style=\\\"clear: both;\\\"></div>\\n            <div *ngFor=\\\"let letter of company.letter\\\">\\n              {{letter.name}}\\n              <span class=\\\"badge badge-danger float-right ml-1\\\" (click)=\\\"editCompany(company, letter)\\\">Edit</span>\\n              <span *ngIf='letter.printed === undefined' class=\\\"badge badge-secondary float-right\\\" (click)=\\\"printPdf(company, letter)\\\">PDF</span>\\n              <span *ngIf='letter.printed !== undefined' class=\\\"badge badge-success float-right\\\" (click)=\\\"printPdf(company, letter)\\\">PDF</span>\\n            </div>\\n          </li>\\n        </ul>\\n\\n        <!--<form class=\\\"p-2 mb-3\\\">-->\\n          <!--<button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Drucken</button>-->\\n        <!--</form>-->\\n      </ng-container>\\n      <h4 class=\\\"d-flex justify-content-between align-items-center mb-3 mt-2\\\">\\n        Absender\\n      </h4>\\n      <textarea rows=\\\"6\\\" (change)=\\\"saveSender()\\\" [(ngModel)]=\\\"sender\\\" class=\\\"form-control\\\"></textarea>\\n      <!--<h4 class=\\\"d-flex justify-content-between align-items-center mb-3\\\">-->\\n        <!--<span class=\\\"text-muted\\\">Archiv</span>-->\\n        <!--<span class=\\\"badge badge-secondary badge-pill\\\">{{companyList.length}}</span>-->\\n      <!--</h4>-->\\n\\n      <!--<ul class=\\\"list-group\\\">-->\\n        <!--<li class=\\\"list-group-item\\\" *ngFor=\\\"let company of companyList\\\"><h5>{{company.companyName}}</h5></li>-->\\n      <!--</ul>-->\\n\\n    </div>\\n\\n    <!-- Details -->\\n    <main role=\\\"main\\\" class=\\\"col-md-8 order-md-1\\\">\\n      <h4 class=\\\"mb-3\\\">Firma</h4>\\n      <form class=\\\"needs-validation\\\" novalidate>\\n        <div class=\\\"mb-3\\\">\\n          <label for=\\\"companyName\\\">Firmenname</label>\\n          <input [(ngModel)]=\\\"currentCompany.companyName\\\" name=\\\"companyName\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"companyName\\\" placeholder=\\\"\\\" value=\\\"\\\" required>\\n          <div class=\\\"invalid-feedback\\\">\\n            Firmenname muss angegeben werden\\n          </div>\\n        </div>\\n\\n        <div class=\\\"mb-3\\\">\\n          <label for=\\\"companyAddress\\\">Straße / Postfach</label>\\n          <input [(ngModel)]=\\\"currentCompany.companyAddress\\\" name=\\\"companyAddress\\\"  type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"companyAddress\\\" placeholder=\\\"\\\" value=\\\"\\\" required>\\n          <div class=\\\"invalid-feedback\\\">\\n            Anchrift erforderlich\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-3 mb-3\\\">\\n            <label for=\\\"companyZip\\\">PLZ</label>\\n            <input [(ngModel)]=\\\"currentCompany.companyZip\\\" name=\\\"companyZip\\\"  type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"companyZip\\\" placeholder=\\\"\\\" value=\\\"\\\" required>\\n            <div class=\\\"invalid-feedback\\\">\\n              PLZ erforderlich\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-9 mb-3\\\">\\n            <label for=\\\"companyCity\\\">Ort</label>\\n            <input [(ngModel)]=\\\"currentCompany.companyCity\\\" name=\\\"companyCity\\\"  type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"companyCity\\\" placeholder=\\\"\\\" value=\\\"\\\" required>\\n            <div class=\\\"invalid-feedback\\\">\\n              Ort erforderlich\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"mb-3\\\">\\n          <label for=\\\"companyCountry\\\">Land (nur bei Ausland)</label>\\n          <input [(ngModel)]=\\\"currentCompany.companyCountry\\\" name=\\\"companyCountry\\\"  type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"companyCountry\\\" placeholder=\\\"\\\" value=\\\"\\\">\\n        </div>\\n        <div class=\\\"mb-3\\\">\\n          <label for=\\\"contractNumber\\\">Vertragsnummer, Geschäftszeichen, Kennzeichen (Optional)</label>\\n          <input [(ngModel)]=\\\"currentCompany.contractNumber\\\" name=\\\"contractNumber\\\"  type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"contractNumber\\\" placeholder=\\\"Telefonnummer, Vertragsnummer, Aktenzeichen, etc.\\\" value=\\\"\\\">\\n\\n        </div>\\n\\n\\n        <div class=\\\"mb-3\\\">\\n          <label for=\\\"remarks\\\">Weitere Bemerkungen (optional)</label>\\n          <textarea [(ngModel)]=\\\"currentCompany.remarks\\\" name=\\\"remarks\\\"  class=\\\"form-control\\\" id=\\\"remarks\\\" placeholder=\\\"z. B. bezug auf ein vorheriges Schreiben, präzisierung des Auskunftsersuchens\\\"></textarea>\\n\\n        </div>\\n\\n        <hr class=\\\"mb-4\\\">\\n        <h4 class=\\\"mb-3\\\">{{letter.titleText}}</h4>\\n\\n        <div class=\\\"float-right\\\">{{getDate()}}</div>\\n        <p *ngIf=\\\"currentCompany.contractNumber\\\">Betreff: {{currentCompany.contractNumber}}</p>\\n\\n\\n        <div class=\\\"custom-control custom-checkbox\\\" *ngFor=\\\"let textblock of letter.textblocks\\\">\\n          <input [(ngModel)]=\\\"textblock.selected\\\" name=\\\"{{textblock.name}}\\\" type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"{{textblock.name}}\\\">\\n          <label class=\\\"custom-control-label\\\" for=\\\"{{textblock.name}}\\\">{{textblock.content}}</label>\\n        </div>\\n\\n        <hr class=\\\"mb-4\\\">\\n\\n        <button (click)=\\\"saveCompany()\\\" class=\\\"btn btn-primary btn-lg btn-block\\\" type=\\\"submit\\\">Eintrag speichern</button>\\n      </form>\\n    </main>\\n  </div>\\n\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 617\n// module chunks = 1"],"sourceRoot":""}